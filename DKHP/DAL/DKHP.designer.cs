#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DKHP")]
	public partial class DKHPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDieuKienMon(DieuKienMon instance);
    partial void UpdateDieuKienMon(DieuKienMon instance);
    partial void DeleteDieuKienMon(DieuKienMon instance);
    partial void InsertThongBao(ThongBao instance);
    partial void UpdateThongBao(ThongBao instance);
    partial void DeleteThongBao(ThongBao instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertLopHocPhan(LopHocPhan instance);
    partial void UpdateLopHocPhan(LopHocPhan instance);
    partial void DeleteLopHocPhan(LopHocPhan instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertSinhVienDangKy(SinhVienDangKy instance);
    partial void UpdateSinhVienDangKy(SinhVienDangKy instance);
    partial void DeleteSinhVienDangKy(SinhVienDangKy instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public DKHPDataContext() : 
				base(global::DAL.Properties.Settings.Default.DKHPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DKHPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DKHPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DKHPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DKHPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DieuKienMon> DieuKienMons
		{
			get
			{
				return this.GetTable<DieuKienMon>();
			}
		}
		
		public System.Data.Linq.Table<ThongBao> ThongBaos
		{
			get
			{
				return this.GetTable<ThongBao>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<LopHocPhan> LopHocPhans
		{
			get
			{
				return this.GetTable<LopHocPhan>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVienDangKy> SinhVienDangKies
		{
			get
			{
				return this.GetTable<SinhVienDangKy>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DieuKienMon")]
	public partial class DieuKienMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDKM;
		
		private string _maMHTruoc;
		
		private string _maMH;
		
		private string _MoTa;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDKMChanging(int value);
    partial void OnmaDKMChanged();
    partial void OnmaMHTruocChanging(string value);
    partial void OnmaMHTruocChanged();
    partial void OnmaMHChanging(string value);
    partial void OnmaMHChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public DieuKienMon()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDKM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDKM
		{
			get
			{
				return this._maDKM;
			}
			set
			{
				if ((this._maDKM != value))
				{
					this.OnmaDKMChanging(value);
					this.SendPropertyChanging();
					this._maDKM = value;
					this.SendPropertyChanged("maDKM");
					this.OnmaDKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMHTruoc", DbType="NVarChar(20)")]
		public string maMHTruoc
		{
			get
			{
				return this._maMHTruoc;
			}
			set
			{
				if ((this._maMHTruoc != value))
				{
					this.OnmaMHTruocChanging(value);
					this.SendPropertyChanging();
					this._maMHTruoc = value;
					this.SendPropertyChanged("maMHTruoc");
					this.OnmaMHTruocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMH", DbType="NVarChar(10)")]
		public string maMH
		{
			get
			{
				return this._maMH;
			}
			set
			{
				if ((this._maMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMHChanging(value);
					this.SendPropertyChanging();
					this._maMH = value;
					this.SendPropertyChanged("maMH");
					this.OnmaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(20)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DieuKienMon", Storage="_MonHoc", ThisKey="maMH", OtherKey="maMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DieuKienMons.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DieuKienMons.Add(this);
						this._maMH = value.maMH;
					}
					else
					{
						this._maMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBao")]
	public partial class ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maThongBao;
		
		private string _chuDe;
		
		private string _noiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaThongBaoChanging(string value);
    partial void OnmaThongBaoChanged();
    partial void OnchuDeChanging(string value);
    partial void OnchuDeChanged();
    partial void OnnoiDungChanging(string value);
    partial void OnnoiDungChanged();
    #endregion
		
		public ThongBao()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThongBao", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maThongBao
		{
			get
			{
				return this._maThongBao;
			}
			set
			{
				if ((this._maThongBao != value))
				{
					this.OnmaThongBaoChanging(value);
					this.SendPropertyChanging();
					this._maThongBao = value;
					this.SendPropertyChanged("maThongBao");
					this.OnmaThongBaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chuDe", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string chuDe
		{
			get
			{
				return this._chuDe;
			}
			set
			{
				if ((this._chuDe != value))
				{
					this.OnchuDeChanging(value);
					this.SendPropertyChanging();
					this._chuDe = value;
					this.SendPropertyChanged("chuDe");
					this.OnchuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noiDung", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string noiDung
		{
			get
			{
				return this._noiDung;
			}
			set
			{
				if ((this._noiDung != value))
				{
					this.OnnoiDungChanging(value);
					this.SendPropertyChanging();
					this._noiDung = value;
					this.SendPropertyChanged("noiDung");
					this.OnnoiDungChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maGV;
		
		private string _hotenGV;
		
		private string _nganh;
		
		private string _khoa;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<LopHocPhan> _LopHocPhans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGVChanging(int value);
    partial void OnmaGVChanged();
    partial void OnhotenGVChanging(string value);
    partial void OnhotenGVChanged();
    partial void OnnganhChanging(string value);
    partial void OnnganhChanged();
    partial void OnkhoaChanging(string value);
    partial void OnkhoaChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public GiangVien()
		{
			this._LopHocPhans = new EntitySet<LopHocPhan>(new Action<LopHocPhan>(this.attach_LopHocPhans), new Action<LopHocPhan>(this.detach_LopHocPhans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maGV
		{
			get
			{
				return this._maGV;
			}
			set
			{
				if ((this._maGV != value))
				{
					this.OnmaGVChanging(value);
					this.SendPropertyChanging();
					this._maGV = value;
					this.SendPropertyChanged("maGV");
					this.OnmaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotenGV", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string hotenGV
		{
			get
			{
				return this._hotenGV;
			}
			set
			{
				if ((this._hotenGV != value))
				{
					this.OnhotenGVChanging(value);
					this.SendPropertyChanging();
					this._hotenGV = value;
					this.SendPropertyChanged("hotenGV");
					this.OnhotenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nganh", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string nganh
		{
			get
			{
				return this._nganh;
			}
			set
			{
				if ((this._nganh != value))
				{
					this.OnnganhChanging(value);
					this.SendPropertyChanging();
					this._nganh = value;
					this.SendPropertyChanged("nganh");
					this.OnnganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_khoa", DbType="NVarChar(40)")]
		public string khoa
		{
			get
			{
				return this._khoa;
			}
			set
			{
				if ((this._khoa != value))
				{
					this.OnkhoaChanging(value);
					this.SendPropertyChanging();
					this._khoa = value;
					this.SendPropertyChanged("khoa");
					this.OnkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHocPhan", Storage="_LopHocPhans", ThisKey="maGV", OtherKey="maGV")]
		public EntitySet<LopHocPhan> LopHocPhans
		{
			get
			{
				return this._LopHocPhans;
			}
			set
			{
				this._LopHocPhans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maHK;
		
		private int _hocKy1;
		
		private System.Nullable<int> _NamHoc;
		
		private EntitySet<LopHocPhan> _LopHocPhans;
		
		private EntitySet<MonHoc> _MonHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaHKChanging(int value);
    partial void OnmaHKChanged();
    partial void OnhocKy1Changing(int value);
    partial void OnhocKy1Changed();
    partial void OnNamHocChanging(System.Nullable<int> value);
    partial void OnNamHocChanged();
    #endregion
		
		public HocKy()
		{
			this._LopHocPhans = new EntitySet<LopHocPhan>(new Action<LopHocPhan>(this.attach_LopHocPhans), new Action<LopHocPhan>(this.detach_LopHocPhans));
			this._MonHocs = new EntitySet<MonHoc>(new Action<MonHoc>(this.attach_MonHocs), new Action<MonHoc>(this.detach_MonHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="hocKy", Storage="_hocKy1", DbType="Int NOT NULL")]
		public int hocKy1
		{
			get
			{
				return this._hocKy1;
			}
			set
			{
				if ((this._hocKy1 != value))
				{
					this.OnhocKy1Changing(value);
					this.SendPropertyChanging();
					this._hocKy1 = value;
					this.SendPropertyChanged("hocKy1");
					this.OnhocKy1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="Int")]
		public System.Nullable<int> NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_LopHocPhan", Storage="_LopHocPhans", ThisKey="maHK", OtherKey="maHK")]
		public EntitySet<LopHocPhan> LopHocPhans
		{
			get
			{
				return this._LopHocPhans;
			}
			set
			{
				this._LopHocPhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_MonHoc", Storage="_MonHocs", ThisKey="maHK", OtherKey="MaHK")]
		public EntitySet<MonHoc> MonHocs
		{
			get
			{
				return this._MonHocs;
			}
			set
			{
				this._MonHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
		
		private void attach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHocPhan")]
	public partial class LopHocPhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLopHP;
		
		private string _maMH;
		
		private System.Nullable<int> _maHK;
		
		private string _tenLop;
		
		private System.Nullable<int> _maGV;
		
		private string _PhongHoc;
		
		private string _LichHoc;
		
		private System.Nullable<System.DateTime> _ThoiGianBDHoc;
		
		private System.Nullable<System.DateTime> _ThoiGianKetThuc;
		
		private EntitySet<SinhVienDangKy> _SinhVienDangKies;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLopHPChanging(int value);
    partial void OnmaLopHPChanged();
    partial void OnmaMHChanging(string value);
    partial void OnmaMHChanged();
    partial void OnmaHKChanging(System.Nullable<int> value);
    partial void OnmaHKChanged();
    partial void OntenLopChanging(string value);
    partial void OntenLopChanged();
    partial void OnmaGVChanging(System.Nullable<int> value);
    partial void OnmaGVChanged();
    partial void OnPhongHocChanging(string value);
    partial void OnPhongHocChanged();
    partial void OnLichHocChanging(string value);
    partial void OnLichHocChanged();
    partial void OnThoiGianBDHocChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDHocChanged();
    partial void OnThoiGianKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKetThucChanged();
    #endregion
		
		public LopHocPhan()
		{
			this._SinhVienDangKies = new EntitySet<SinhVienDangKy>(new Action<SinhVienDangKy>(this.attach_SinhVienDangKies), new Action<SinhVienDangKy>(this.detach_SinhVienDangKies));
			this._GiangVien = default(EntityRef<GiangVien>);
			this._HocKy = default(EntityRef<HocKy>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLopHP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maLopHP
		{
			get
			{
				return this._maLopHP;
			}
			set
			{
				if ((this._maLopHP != value))
				{
					this.OnmaLopHPChanging(value);
					this.SendPropertyChanging();
					this._maLopHP = value;
					this.SendPropertyChanged("maLopHP");
					this.OnmaLopHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMH", DbType="NVarChar(10)")]
		public string maMH
		{
			get
			{
				return this._maMH;
			}
			set
			{
				if ((this._maMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMHChanging(value);
					this.SendPropertyChanging();
					this._maMH = value;
					this.SendPropertyChanged("maMH");
					this.OnmaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maHK", DbType="Int")]
		public System.Nullable<int> maHK
		{
			get
			{
				return this._maHK;
			}
			set
			{
				if ((this._maHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaHKChanging(value);
					this.SendPropertyChanging();
					this._maHK = value;
					this.SendPropertyChanged("maHK");
					this.OnmaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLop", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string tenLop
		{
			get
			{
				return this._tenLop;
			}
			set
			{
				if ((this._tenLop != value))
				{
					this.OntenLopChanging(value);
					this.SendPropertyChanging();
					this._tenLop = value;
					this.SendPropertyChanged("tenLop");
					this.OntenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGV", DbType="Int")]
		public System.Nullable<int> maGV
		{
			get
			{
				return this._maGV;
			}
			set
			{
				if ((this._maGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaGVChanging(value);
					this.SendPropertyChanging();
					this._maGV = value;
					this.SendPropertyChanged("maGV");
					this.OnmaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhongHoc", DbType="NVarChar(10)")]
		public string PhongHoc
		{
			get
			{
				return this._PhongHoc;
			}
			set
			{
				if ((this._PhongHoc != value))
				{
					this.OnPhongHocChanging(value);
					this.SendPropertyChanging();
					this._PhongHoc = value;
					this.SendPropertyChanged("PhongHoc");
					this.OnPhongHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LichHoc", DbType="NVarChar(20)")]
		public string LichHoc
		{
			get
			{
				return this._LichHoc;
			}
			set
			{
				if ((this._LichHoc != value))
				{
					this.OnLichHocChanging(value);
					this.SendPropertyChanging();
					this._LichHoc = value;
					this.SendPropertyChanged("LichHoc");
					this.OnLichHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBDHoc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianBDHoc
		{
			get
			{
				return this._ThoiGianBDHoc;
			}
			set
			{
				if ((this._ThoiGianBDHoc != value))
				{
					this.OnThoiGianBDHocChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBDHoc = value;
					this.SendPropertyChanged("ThoiGianBDHoc");
					this.OnThoiGianBDHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianKetThuc
		{
			get
			{
				return this._ThoiGianKetThuc;
			}
			set
			{
				if ((this._ThoiGianKetThuc != value))
				{
					this.OnThoiGianKetThucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKetThuc = value;
					this.SendPropertyChanged("ThoiGianKetThuc");
					this.OnThoiGianKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHocPhan_SinhVienDangKy", Storage="_SinhVienDangKies", ThisKey="maLopHP", OtherKey="maLopHP")]
		public EntitySet<SinhVienDangKy> SinhVienDangKies
		{
			get
			{
				return this._SinhVienDangKies;
			}
			set
			{
				this._SinhVienDangKies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHocPhan", Storage="_GiangVien", ThisKey="maGV", OtherKey="maGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.LopHocPhans.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.LopHocPhans.Add(this);
						this._maGV = value.maGV;
					}
					else
					{
						this._maGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_LopHocPhan", Storage="_HocKy", ThisKey="maHK", OtherKey="maHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.LopHocPhans.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.LopHocPhans.Add(this);
						this._maHK = value.maHK;
					}
					else
					{
						this._maHK = default(Nullable<int>);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopHocPhan", Storage="_MonHoc", ThisKey="maMH", OtherKey="maMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.LopHocPhans.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.LopHocPhans.Add(this);
						this._maMH = value.maMH;
					}
					else
					{
						this._maMH = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhVienDangKies(SinhVienDangKy entity)
		{
			this.SendPropertyChanging();
			entity.LopHocPhan = this;
		}
		
		private void detach_SinhVienDangKies(SinhVienDangKy entity)
		{
			this.SendPropertyChanging();
			entity.LopHocPhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maMH;
		
		private System.Nullable<int> _MaHK;
		
		private string _tenMon;
		
		private int _tinChi;
		
		private string _lyThuyet;
		
		private string _thucHanh;
		
		private EntitySet<DieuKienMon> _DieuKienMons;
		
		private EntitySet<LopHocPhan> _LopHocPhans;
		
		private EntityRef<HocKy> _HocKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaMHChanging(string value);
    partial void OnmaMHChanged();
    partial void OnMaHKChanging(System.Nullable<int> value);
    partial void OnMaHKChanged();
    partial void OntenMonChanging(string value);
    partial void OntenMonChanged();
    partial void OntinChiChanging(int value);
    partial void OntinChiChanged();
    partial void OnlyThuyetChanging(string value);
    partial void OnlyThuyetChanged();
    partial void OnthucHanhChanging(string value);
    partial void OnthucHanhChanged();
    #endregion
		
		public MonHoc()
		{
			this._DieuKienMons = new EntitySet<DieuKienMon>(new Action<DieuKienMon>(this.attach_DieuKienMons), new Action<DieuKienMon>(this.detach_DieuKienMons));
			this._LopHocPhans = new EntitySet<LopHocPhan>(new Action<LopHocPhan>(this.attach_LopHocPhans), new Action<LopHocPhan>(this.detach_LopHocPhans));
			this._HocKy = default(EntityRef<HocKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMH", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maMH
		{
			get
			{
				return this._maMH;
			}
			set
			{
				if ((this._maMH != value))
				{
					this.OnmaMHChanging(value);
					this.SendPropertyChanging();
					this._maMH = value;
					this.SendPropertyChanged("maMH");
					this.OnmaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="Int")]
		public System.Nullable<int> MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenMon", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string tenMon
		{
			get
			{
				return this._tenMon;
			}
			set
			{
				if ((this._tenMon != value))
				{
					this.OntenMonChanging(value);
					this.SendPropertyChanging();
					this._tenMon = value;
					this.SendPropertyChanged("tenMon");
					this.OntenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tinChi", DbType="Int NOT NULL")]
		public int tinChi
		{
			get
			{
				return this._tinChi;
			}
			set
			{
				if ((this._tinChi != value))
				{
					this.OntinChiChanging(value);
					this.SendPropertyChanging();
					this._tinChi = value;
					this.SendPropertyChanged("tinChi");
					this.OntinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lyThuyet", DbType="NVarChar(5)")]
		public string lyThuyet
		{
			get
			{
				return this._lyThuyet;
			}
			set
			{
				if ((this._lyThuyet != value))
				{
					this.OnlyThuyetChanging(value);
					this.SendPropertyChanging();
					this._lyThuyet = value;
					this.SendPropertyChanged("lyThuyet");
					this.OnlyThuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thucHanh", DbType="NVarChar(5)")]
		public string thucHanh
		{
			get
			{
				return this._thucHanh;
			}
			set
			{
				if ((this._thucHanh != value))
				{
					this.OnthucHanhChanging(value);
					this.SendPropertyChanging();
					this._thucHanh = value;
					this.SendPropertyChanged("thucHanh");
					this.OnthucHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DieuKienMon", Storage="_DieuKienMons", ThisKey="maMH", OtherKey="maMH")]
		public EntitySet<DieuKienMon> DieuKienMons
		{
			get
			{
				return this._DieuKienMons;
			}
			set
			{
				this._DieuKienMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopHocPhan", Storage="_LopHocPhans", ThisKey="maMH", OtherKey="maMH")]
		public EntitySet<LopHocPhan> LopHocPhans
		{
			get
			{
				return this._LopHocPhans;
			}
			set
			{
				this._LopHocPhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_MonHoc", Storage="_HocKy", ThisKey="MaHK", OtherKey="maHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.MonHocs.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.MonHocs.Add(this);
						this._MaHK = value.maHK;
					}
					else
					{
						this._MaHK = default(Nullable<int>);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DieuKienMons(DieuKienMon entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DieuKienMons(DieuKienMon entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_LopHocPhans(LopHocPhan entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSV;
		
		private string _hotenSV;
		
		private string _lop;
		
		private string _khoa;
		
		private string _nganh;
		
		private System.Data.Linq.Binary _image;
		
		private System.Nullable<int> _NamVaoHoc;
		
		private EntitySet<SinhVienDangKy> _SinhVienDangKies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSVChanging(int value);
    partial void OnmaSVChanged();
    partial void OnhotenSVChanging(string value);
    partial void OnhotenSVChanged();
    partial void OnlopChanging(string value);
    partial void OnlopChanged();
    partial void OnkhoaChanging(string value);
    partial void OnkhoaChanged();
    partial void OnnganhChanging(string value);
    partial void OnnganhChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    partial void OnNamVaoHocChanging(System.Nullable<int> value);
    partial void OnNamVaoHocChanged();
    #endregion
		
		public SinhVien()
		{
			this._SinhVienDangKies = new EntitySet<SinhVienDangKy>(new Action<SinhVienDangKy>(this.attach_SinhVienDangKies), new Action<SinhVienDangKy>(this.detach_SinhVienDangKies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hotenSV", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string hotenSV
		{
			get
			{
				return this._hotenSV;
			}
			set
			{
				if ((this._hotenSV != value))
				{
					this.OnhotenSVChanging(value);
					this.SendPropertyChanging();
					this._hotenSV = value;
					this.SendPropertyChanged("hotenSV");
					this.OnhotenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lop", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string lop
		{
			get
			{
				return this._lop;
			}
			set
			{
				if ((this._lop != value))
				{
					this.OnlopChanging(value);
					this.SendPropertyChanging();
					this._lop = value;
					this.SendPropertyChanged("lop");
					this.OnlopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_khoa", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string khoa
		{
			get
			{
				return this._khoa;
			}
			set
			{
				if ((this._khoa != value))
				{
					this.OnkhoaChanging(value);
					this.SendPropertyChanging();
					this._khoa = value;
					this.SendPropertyChanged("khoa");
					this.OnkhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nganh", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string nganh
		{
			get
			{
				return this._nganh;
			}
			set
			{
				if ((this._nganh != value))
				{
					this.OnnganhChanging(value);
					this.SendPropertyChanging();
					this._nganh = value;
					this.SendPropertyChanged("nganh");
					this.OnnganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamVaoHoc", DbType="Int")]
		public System.Nullable<int> NamVaoHoc
		{
			get
			{
				return this._NamVaoHoc;
			}
			set
			{
				if ((this._NamVaoHoc != value))
				{
					this.OnNamVaoHocChanging(value);
					this.SendPropertyChanging();
					this._NamVaoHoc = value;
					this.SendPropertyChanged("NamVaoHoc");
					this.OnNamVaoHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVienDangKy", Storage="_SinhVienDangKies", ThisKey="maSV", OtherKey="maSV")]
		public EntitySet<SinhVienDangKy> SinhVienDangKies
		{
			get
			{
				return this._SinhVienDangKies;
			}
			set
			{
				this._SinhVienDangKies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhVienDangKies(SinhVienDangKy entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SinhVienDangKies(SinhVienDangKy entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVienDangKy")]
	public partial class SinhVienDangKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSVDangKy;
		
		private System.Nullable<int> _maSV;
		
		private System.Nullable<int> _maLopHP;
		
		private System.Nullable<int> _ThuongKi;
		
		private System.Nullable<int> _GiuaKi;
		
		private System.Nullable<int> _CuoiKi;
		
		private EntityRef<LopHocPhan> _LopHocPhan;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSVDangKyChanging(int value);
    partial void OnmaSVDangKyChanged();
    partial void OnmaSVChanging(System.Nullable<int> value);
    partial void OnmaSVChanged();
    partial void OnmaLopHPChanging(System.Nullable<int> value);
    partial void OnmaLopHPChanged();
    partial void OnThuongKiChanging(System.Nullable<int> value);
    partial void OnThuongKiChanged();
    partial void OnGiuaKiChanging(System.Nullable<int> value);
    partial void OnGiuaKiChanged();
    partial void OnCuoiKiChanging(System.Nullable<int> value);
    partial void OnCuoiKiChanged();
    #endregion
		
		public SinhVienDangKy()
		{
			this._LopHocPhan = default(EntityRef<LopHocPhan>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSVDangKy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maSVDangKy
		{
			get
			{
				return this._maSVDangKy;
			}
			set
			{
				if ((this._maSVDangKy != value))
				{
					this.OnmaSVDangKyChanging(value);
					this.SendPropertyChanging();
					this._maSVDangKy = value;
					this.SendPropertyChanged("maSVDangKy");
					this.OnmaSVDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="Int")]
		public System.Nullable<int> maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLopHP", DbType="Int")]
		public System.Nullable<int> maLopHP
		{
			get
			{
				return this._maLopHP;
			}
			set
			{
				if ((this._maLopHP != value))
				{
					if (this._LopHocPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLopHPChanging(value);
					this.SendPropertyChanging();
					this._maLopHP = value;
					this.SendPropertyChanged("maLopHP");
					this.OnmaLopHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongKi", DbType="Int")]
		public System.Nullable<int> ThuongKi
		{
			get
			{
				return this._ThuongKi;
			}
			set
			{
				if ((this._ThuongKi != value))
				{
					this.OnThuongKiChanging(value);
					this.SendPropertyChanging();
					this._ThuongKi = value;
					this.SendPropertyChanged("ThuongKi");
					this.OnThuongKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiuaKi", DbType="Int")]
		public System.Nullable<int> GiuaKi
		{
			get
			{
				return this._GiuaKi;
			}
			set
			{
				if ((this._GiuaKi != value))
				{
					this.OnGiuaKiChanging(value);
					this.SendPropertyChanging();
					this._GiuaKi = value;
					this.SendPropertyChanged("GiuaKi");
					this.OnGiuaKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CuoiKi", DbType="Int")]
		public System.Nullable<int> CuoiKi
		{
			get
			{
				return this._CuoiKi;
			}
			set
			{
				if ((this._CuoiKi != value))
				{
					this.OnCuoiKiChanging(value);
					this.SendPropertyChanging();
					this._CuoiKi = value;
					this.SendPropertyChanged("CuoiKi");
					this.OnCuoiKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHocPhan_SinhVienDangKy", Storage="_LopHocPhan", ThisKey="maLopHP", OtherKey="maLopHP", IsForeignKey=true)]
		public LopHocPhan LopHocPhan
		{
			get
			{
				return this._LopHocPhan.Entity;
			}
			set
			{
				LopHocPhan previousValue = this._LopHocPhan.Entity;
				if (((previousValue != value) 
							|| (this._LopHocPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHocPhan.Entity = null;
						previousValue.SinhVienDangKies.Remove(this);
					}
					this._LopHocPhan.Entity = value;
					if ((value != null))
					{
						value.SinhVienDangKies.Add(this);
						this._maLopHP = value.maLopHP;
					}
					else
					{
						this._maLopHP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LopHocPhan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVienDangKy", Storage="_SinhVien", ThisKey="maSV", OtherKey="maSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SinhVienDangKies.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SinhVienDangKies.Add(this);
						this._maSV = value.maSV;
					}
					else
					{
						this._maSV = default(Nullable<int>);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maTK;
		
		private string _pass;
		
		private int _quyentruycap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTKChanging(int value);
    partial void OnmaTKChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnquyentruycapChanging(int value);
    partial void OnquyentruycapChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maTK
		{
			get
			{
				return this._maTK;
			}
			set
			{
				if ((this._maTK != value))
				{
					this.OnmaTKChanging(value);
					this.SendPropertyChanging();
					this._maTK = value;
					this.SendPropertyChanged("maTK");
					this.OnmaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="NVarChar(20)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyentruycap", DbType="Int NOT NULL")]
		public int quyentruycap
		{
			get
			{
				return this._quyentruycap;
			}
			set
			{
				if ((this._quyentruycap != value))
				{
					this.OnquyentruycapChanging(value);
					this.SendPropertyChanging();
					this._quyentruycap = value;
					this.SendPropertyChanged("quyentruycap");
					this.OnquyentruycapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
